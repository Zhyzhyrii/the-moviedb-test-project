{"uid":"5041d2d35c25407b","name":"updateMovieRatingAndVerifyRatingIsUpdated","fullName":"org.themoviedb.movies.UpdateMovieRatingHappyPathTests.updateMovieRatingAndVerifyRatingIsUpdated","historyId":"7e5c5a10dc92fd2cd95baf41c279ad68","time":{"start":1756151765202,"stop":1756151766450,"duration":1248},"status":"failed","statusMessage":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n","statusTrace":"org.opentest4j.AssertionFailedError: [Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n\n\tat org.themoviedb.assertions.AccountAsserts.ratedMovieListContainsExpectedRatedMovie(AccountAsserts.java:79)\n\tat org.themoviedb.movies.UpdateMovieRatingHappyPathTests.updateMovieRatingAndVerifyRatingIsUpdated(UpdateMovieRatingHappyPathTests.java:52)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:260)\n\tat org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:274)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:678)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:148)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"springTestContextBeforeTestClass","time":{"start":1756151765024,"stop":1756151765024,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"springTestContextPrepareTestInstance","time":{"start":1756151765025,"stop":1756151765026,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"springTestContextBeforeTestMethod","time":{"start":1756151765027,"stop":1756151765027,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setUp","time":{"start":1756151765028,"stop":1756151765200,"duration":172},"description":"","status":"passed","steps":[{"name":"Get random top rated movie","time":{"start":1756151765028,"stop":1756151765076,"duration":48},"status":"passed","steps":[{"name":"GET: https://api.themoviedb.org/3/movie/top_rated","time":{"start":1756151765033,"stop":1756151765033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"e6ab4b637fecf8f8","name":"Request","source":"e6ab4b637fecf8f8.html","type":"text/html","size":946},{"uid":"ac06c967ee5d5759","name":"HTTP/1.1 200 OK","source":"ac06c967ee5d5759.html","type":"text/html","size":23891}],"parameters":[],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Add rating '8.0' to movie '637'","time":{"start":1756151765077,"stop":1756151765200,"duration":123},"status":"passed","steps":[{"name":"POST: https://api.themoviedb.org/3/movie/637/rating","time":{"start":1756151765086,"stop":1756151765086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"2cd18d8b4e53fbf1","name":"Request","source":"2cd18d8b4e53fbf1.html","type":"text/html","size":1109},{"uid":"69fc7404464a0704","name":"HTTP/1.1 201 Created","source":"69fc7404464a0704.html","type":"text/html","size":1164}],"parameters":[{"name":"movieId","value":"637"},{"name":"value","value":"8.0"}],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":4,"shouldDisplayMessage":false,"attachmentsCount":4,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n","statusTrace":"org.opentest4j.AssertionFailedError: [Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n\n\tat org.themoviedb.assertions.AccountAsserts.ratedMovieListContainsExpectedRatedMovie(AccountAsserts.java:79)\n\tat org.themoviedb.movies.UpdateMovieRatingHappyPathTests.updateMovieRatingAndVerifyRatingIsUpdated(UpdateMovieRatingHappyPathTests.java:52)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:260)\n\tat org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:274)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:678)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:148)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","steps":[{"name":"Add rating '5.5' to movie '637'","time":{"start":1756151765203,"stop":1756151765316,"duration":113},"status":"passed","steps":[{"name":"POST: https://api.themoviedb.org/3/movie/637/rating","time":{"start":1756151765208,"stop":1756151765208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"312d22e6abe6a6ff","name":"Request","source":"312d22e6abe6a6ff.html","type":"text/html","size":1109},{"uid":"ccc1660443d78809","name":"HTTP/1.1 201 Created","source":"ccc1660443d78809.html","type":"text/html","size":1164}],"parameters":[{"name":"movieId","value":"637"},{"name":"value","value":"5.5"}],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Wait and get rated movies","time":{"start":1756151765317,"stop":1756151766440,"duration":1123},"status":"passed","steps":[{"name":"GET: https://api.themoviedb.org/3/account/8564434/rated/movies","time":{"start":1756151766321,"stop":1756151766321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"a8a77de17d01a27f","name":"Request","source":"a8a77de17d01a27f.html","type":"text/html","size":972},{"uid":"7141ecabb68321f1","name":"HTTP/1.1 200 OK","source":"7141ecabb68321f1.html","type":"text/html","size":3555}],"parameters":[{"name":"predicate","value":"org.themoviedb.movies.UpdateMovieRatingHappyPathTests$$Lambda/0x00007f625c9d5c40@49b257f9"}],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Users list of rated movies should contain 'MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761)' movie with '{}' rating","time":{"start":1756151766440,"stop":1756151766449,"duration":9},"status":"failed","statusMessage":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n","statusTrace":"org.opentest4j.AssertionFailedError: [Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761), rating=5.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=12.6285), rating=2.5)]\n\n\tat org.themoviedb.assertions.AccountAsserts.ratedMovieListContainsExpectedRatedMovie(AccountAsserts.java:79)\n\tat org.themoviedb.movies.UpdateMovieRatingHappyPathTests.updateMovieRatingAndVerifyRatingIsUpdated(UpdateMovieRatingHappyPathTests.java:52)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:260)\n\tat org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:154)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:274)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:678)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\n\tat org.testng.TestRunner.run(TestRunner.java:614)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:148)\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","steps":[],"attachments":[],"parameters":[{"name":"movieDto","value":"MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=8.2761)"},{"name":"rating","value":"5.5"}],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":5,"shouldDisplayMessage":false,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"tearDown","time":{"start":1756151766452,"stop":1756151766557,"duration":105},"description":"","status":"passed","steps":[{"name":"Remove rating for movie '637'","time":{"start":1756151766452,"stop":1756151766557,"duration":105},"status":"passed","steps":[{"name":"DELETE: https://api.themoviedb.org/3/movie/637/rating","time":{"start":1756151766455,"stop":1756151766455,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8f2af24ff0b4c3","name":"Request","source":"8f2af24ff0b4c3.html","type":"text/html","size":954},{"uid":"d194197097beff5f","name":"HTTP/1.1 200 OK","source":"d194197097beff5f.html","type":"text/html","size":1198}],"parameters":[{"name":"movieId","value":"637"}],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"springTestContextAfterTestMethod","time":{"start":1756151766558,"stop":1756151766559,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"springTestContextAfterTestClass","time":{"start":1756151766940,"stop":1756151766940,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"package","value":"org.themoviedb.movies.UpdateMovieRatingHappyPathTests"},{"name":"testClass","value":"org.themoviedb.movies.UpdateMovieRatingHappyPathTests"},{"name":"testMethod","value":"updateMovieRatingAndVerifyRatingIsUpdated"},{"name":"parentSuite","value":"Gradle suite"},{"name":"suite","value":"Gradle test"},{"name":"subSuite","value":"org.themoviedb.movies.UpdateMovieRatingHappyPathTests"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2568@pkrvmqc4gcfdwos.Test worker(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":21},"items":[{"uid":"cfb996d67aee5e33","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/61/#testresult/cfb996d67aee5e33","status":"passed","time":{"start":1755808502181,"stop":1755808503297,"duration":1116}},{"uid":"a0be7a4644158917","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/60/#testresult/a0be7a4644158917","status":"passed","time":{"start":1755635618823,"stop":1755635619914,"duration":1091}},{"uid":"9869b540786c8628","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/59/#testresult/9869b540786c8628","status":"passed","time":{"start":1755550535774,"stop":1755550536983,"duration":1209}},{"uid":"993df4d56ff85bf3","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/58/#testresult/993df4d56ff85bf3","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.1357), rating=3.5), but it contains [RatedMovieDto(super=MovieDto(id=497, title=The Green Mile, originalTitle=The Green Mile, popularity=13.6481), rating=7.5), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.1357), rating=9.0)]] \nExpecting ArrayList:\n  [RatedMovieDto(super=MovieDto(id=497, title=The Green Mile, originalTitle=The Green Mile, popularity=13.6481), rating=7.5),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.1357), rating=9.0)]\nto contain:\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.1357), rating=3.5)]\nbut could not find the following element(s):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.1357), rating=3.5)]\n","time":{"start":1755550188518,"stop":1755550189717,"duration":1199}},{"uid":"ac784d507a9bc1cb","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/57/#testresult/ac784d507a9bc1cb","status":"passed","time":{"start":1755549509301,"stop":1755549510389,"duration":1088}},{"uid":"ce6b879d6d58ff8c","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/56/#testresult/ce6b879d6d58ff8c","status":"passed","time":{"start":1755549327135,"stop":1755549328273,"duration":1138}},{"uid":"ed21773e4f8fc0ac","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/55/#testresult/ed21773e4f8fc0ac","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.8584), rating=6.5)], but it contains [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=13.1269), rating=4.5), RatedMovieDto(super=MovieDto(id=240, title=The Godfather Part II, originalTitle=The Godfather Part II, popularity=16.1843), rating=8.0), RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.8584), rating=6.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=13.1269), rating=4.5),\n    RatedMovieDto(super=MovieDto(id=240, title=The Godfather Part II, originalTitle=The Godfather Part II, popularity=16.1843), rating=8.0),\n    RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.8584), rating=6.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.8584), rating=6.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=13.1269), rating=4.5),\n    RatedMovieDto(super=MovieDto(id=240, title=The Godfather Part II, originalTitle=The Godfather Part II, popularity=16.1843), rating=8.0)]\n","time":{"start":1755546313808,"stop":1755546315087,"duration":1279}},{"uid":"3a07f08c08aaaaf1","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/53/#testresult/3a07f08c08aaaaf1","status":"passed","time":{"start":1755206331669,"stop":1755206332885,"duration":1216}},{"uid":"ecc84c762f70d554","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/52/#testresult/ecc84c762f70d554","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=8.0)], but it contains [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=14.1635), rating=10.0), RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=9.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=14.1635), rating=10.0),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=9.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=8.0)]\nbut some elements were not found:\n  [RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=8.0)]\nand others were not expected:\n  [RatedMovieDto(super=MovieDto(id=769, title=GoodFellas, originalTitle=GoodFellas, popularity=14.1635), rating=10.0),\n    RatedMovieDto(super=MovieDto(id=637, title=Life Is Beautiful, originalTitle=La vita è bella, popularity=9.6325), rating=9.5)]\n","time":{"start":1755205361861,"stop":1755205363114,"duration":1253}},{"uid":"2f246abcb4bec354","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/50//#testresult/2f246abcb4bec354","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=1.0)], but it contains [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=4.0)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=4.0)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=1.0)]\nbut some elements were not found:\n  [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=1.0)]\nand others were not expected:\n  [RatedMovieDto(super=MovieDto(id=278, title=The Shawshank Redemption, originalTitle=The Shawshank Redemption, popularity=32.4061), rating=4.0)]\n","time":{"start":1755204789070,"stop":1755204790199,"duration":1129}},{"uid":"13161a37c410a3b8","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/49//#testresult/13161a37c410a3b8","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=8.0)], but it contains [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5), RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=7.0)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5),\n    RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=7.0)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=8.0)]\nbut some elements were not found:\n  [RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=8.0)]\nand others were not expected:\n  [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5),\n    RatedMovieDto(super=MovieDto(id=424, title=Schindler's List, originalTitle=Schindler's List, popularity=14.2153), rating=7.0)]\n","time":{"start":1755204455642,"stop":1755204456768,"duration":1126}},{"uid":"bf5514c1f1e59424","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/48/#testresult/bf5514c1f1e59424","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=122, title=The Lord of the Rings: The Return of the King, originalTitle=The Lord of the Rings: The Return of the King, popularity=21.5373), rating=9.5)], but it contains [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5), RatedMovieDto(super=MovieDto(id=122, title=The Lord of the Rings: The Return of the King, originalTitle=The Lord of the Rings: The Return of the King, popularity=21.5373), rating=9.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5),\n    RatedMovieDto(super=MovieDto(id=122, title=The Lord of the Rings: The Return of the King, originalTitle=The Lord of the Rings: The Return of the King, popularity=21.5373), rating=9.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=122, title=The Lord of the Rings: The Return of the King, originalTitle=The Lord of the Rings: The Return of the King, popularity=21.5373), rating=9.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=12477, title=Grave of the Fireflies, originalTitle=火垂るの墓, popularity=0.0093), rating=4.5)]\n","time":{"start":1755203969247,"stop":1755203970467,"duration":1220}},{"uid":"7359b76b1f1e08b9","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/47//#testresult/7359b76b1f1e08b9","status":"passed","time":{"start":1755203123176,"stop":1755203124405,"duration":1229}},{"uid":"74e5f60e730d4408","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/46//#testresult/74e5f60e730d4408","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.4559), rating=2.5)], but it contains [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.52), rating=4.0), RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.4559), rating=2.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.52), rating=4.0),\n    RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.4559), rating=2.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=129, title=Spirited Away, originalTitle=千と千尋の神隠し, popularity=17.4559), rating=2.5)]\nbut some elements were not expected:\n  [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.52), rating=4.0)]\n","time":{"start":1755202745861,"stop":1755202746955,"duration":1094}},{"uid":"f1132f4ea1db1d26","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/45//#testresult/f1132f4ea1db1d26","status":"passed","time":{"start":1755202003102,"stop":1755202004231,"duration":1129}},{"uid":"3019ce695deb09b7","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/44//#testresult/3019ce695deb09b7","status":"passed","time":{"start":1755119923172,"stop":1755119924347,"duration":1175}},{"uid":"14b37df42919b14f","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/37//#testresult/14b37df42919b14f","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=7.5)], but it contains [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=15.2242), rating=1.5), RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=1.0)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=15.2242), rating=1.5),\n    RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=1.0)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=7.5)]\nbut some elements were not found:\n  [RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=7.5)]\nand others were not expected:\n  [RatedMovieDto(super=MovieDto(id=389, title=12 Angry Men, originalTitle=12 Angry Men, popularity=15.2242), rating=1.5),\n    RatedMovieDto(super=MovieDto(id=429, title=The Good, the Bad and the Ugly, originalTitle=Il buono, il brutto, il cattivo, popularity=11.4505), rating=1.0)]\n","time":{"start":1755119571245,"stop":1755119572445,"duration":1200}},{"uid":"f4000dbe626308bf","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/36//#testresult/f4000dbe626308bf","status":"passed","time":{"start":1755118622478,"stop":1755118623615,"duration":1137}},{"uid":"338e5e07a91f2768","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/35//#testresult/338e5e07a91f2768","status":"passed","time":{"start":1755118240608,"stop":1755118241740,"duration":1132}},{"uid":"b93fc3579bbb05ed","reportUrl":"https://Zhyzhyrii.github.io/the-moviedb-test-project/34//#testresult/b93fc3579bbb05ed","status":"failed","statusDetails":"[Expected user list of rated movies to contain the movie [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=7.5)], but it contains [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=9.5)]] \nExpecting actual:\n  [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=9.5)]\nto contain exactly (and in same order):\n  [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=7.5)]\nbut some elements were not found:\n  [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=7.5)]\nand others were not expected:\n  [RatedMovieDto(super=MovieDto(id=680, title=Pulp Fiction, originalTitle=Pulp Fiction, popularity=18.5189), rating=9.5)]\n","time":{"start":1755117164371,"stop":1755117165516,"duration":1145}}]},"tags":[]},"source":"5041d2d35c25407b.json","parameterValues":[]}